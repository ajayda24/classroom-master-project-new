<%- include('../includes/head.ejs') %>

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bulma/0.9.1/css/bulma.min.css" integrity="sha512-ZRv40llEogRmoWgZwnsqke3HNzJ0kiI0+pcMgiz2bxO6Ew1DVBtWjVn0qjrXdT3+u+pSN36gLgmJiiQ3cQtyzA==" crossorigin="anonymous" />

    <style>
        body{
            padding-left: 4.5rem;
        }
        #tutorContent{
            margin: 30px auto;
            width: 50rem;
        }
        #form-assignment{
          margin: auto;
          
        }
        @media (min-width: 768px) {
        #form-assignment{
          width: 35rem;
        }
    }
    #hiddenLink{
      display: none;
    }
    
    </style>
    
</head>

<body>
    
    <%- include('../includes/navigation.ejs') %>
    <%- include('./nav.ejs') %>
    <a href="/tutor/chat"> <i class="fas fa-comment-dots" id="chatBox"></i></a>
        <div id="tutorContent">
          
            <center>
                <h1 class="mb-4" style="font-size: 2rem;">Notes</h1>
            </center>
            <div id="form-assignment" class="mb-4" >
            <form  action="/tutor/notes/add" method="post" enctype="multipart/form-data">
                
                <div class="form-group ">
                 <input type="text" class="form-control" name="inputTopic" placeholder="Topic" autocomplete="off"  required>
                </div>
                <div class="form-group ">
                 <input type="text" class="form-control" name="inputYoutubeLink" placeholder="Paste Youtube Link or Upload File" autocomplete="off">
                </div>
                
                <center>
                  <!-- <p class="text-danger font-weight-bold"> Only PDF is Supported</p> -->
                    <div id="file-js-example" class="file has-name is-centered is-info mb-3">
                        <label class="file-label">
                          <input class="file-input" type="file" name="files"  accept=".pdf, .mp4, .mkv, .avi" id="fuUpload">
                          <span class="file-cta">
                            <span class="file-icon">
                              <i class="fas fa-upload"></i>
                            </span>
                            <span class="file-label">
                              Choose a fileâ€¦
                            </span>
                          </span>
                          <span class="file-name">
                            No file uploaded
                          </span>
                          
                        </label>
                        
                      </div>

                      <div id="dvProgress" style="display: none;" class="progress is-link"></div>

                      <script>
                        const fileInput = document.querySelector('#file-js-example input[type=file]');
                        fileInput.onchange = () => {
                          if (fileInput.files.length > 0) {
                            const fileName = document.querySelector('#file-js-example .file-name');
                            fileName.textContent = fileInput.files[0].name;
                          }
                        }
                      </script>
                      

                <a type="submit" href="/tutor/notes" class="btn btn-lg btn-danger ">Cancel</a>
                <button type="submit"  id="btnUpload" class="btn btn-lg btn-success ml-2">Save</button>
                </center>
                
              </form>
            </div>

              <table class="table table-hover table-bordered mt-4 " id="table_id" >
                <thead class="thead-dark">
                  <tr>
                    <th scope="col">Topic</th>
                    <th scope="col">File</th>
                    <th scope="col">Actions</th>
                  </tr>
                </thead>
                <tbody>
                  <%for (note of notes) { %>
                  <tr class="trHover" >
                    <td scope="row"  onclick="window.location.href='notes/details/<%= note._id %>'"><%= note.topic %>
                    </td>
                    <td scope="row"   onclick="window.location.href='notes/details/<%= note._id %>'"><%= note.filename %>
                    </td>
                    <td style="text-align:center" id="td-<%= note._id %>">

                      <form id="<%= note._id %>" >
                        <input type="hidden" value="<%= note._id %>" name="noteId">
                        
                      </form> 
                        <!-- <a class="btn btn-warning mr-2" href="assignments/edit/?edit=true"><i class="fas fa-user-edit"></i></a>  -->
    

                         
                        <button class="btn btn-danger" onclick="confirmDelete(this)" ><i class="fas fa-trash"></i></button> 
                    </td>
                  </tr>
                  <% } %>
                </tbody>
              </table>
        </div>

        <script>
        
          function confirmDelete(a){
            const parentId = a.parentElement.id;
            const formId = document.getElementById(parentId).firstElementChild.id;

              bootbox.confirm({
                  title: "Delete Student?",
                  message: "Do you want to delete this Note now? This cannot be undone.",
                  buttons: {
                      cancel: {
                          label: '<i class="fa fa-times"></i> Cancel'
                      },
                      confirm: {
                          label: '<i class="fa fa-check"></i> Delete'
                      }
                  },
                  callback: function (result) {
                      if(result){;
                          const form = document.getElementById(formId)
                          form.action = "/tutor/notes/delete";
                          form.method = "POST";
                          form.submit();
                      } else {
                          location.reload('/tutor/notes')
                      }
      
                  }
              });
          }
      
          
          </script>
    
    <script>
      $(document).ready( function () {
              $('#table_id').DataTable();
      });
    </script>

    <script src="/js/progressbar.js"></script>
<script type="text/javascript">
        $(function () {
            $('#btnUpload').on("click", function () {
              $('#dvProgress').show();
                var sizeInKb = parseFloat($('#fuUpload').prop("files")['0'].size / 1024).toFixed(2);
                var fileName = $('#fuUpload').prop("files")['0'].name;
                uploadProgress = $('#dvProgress').progressbarManager({
                    totalValue: sizeInKb,
                    initValue: '0kb',
                    animate: true,
                    stripe: true,
                    style: 'primary'
                });
                var chunk = 0;
                var uploading = setInterval(function () {
                    uploadProgress.setValue(chunk);
                    if (uploadProgress.isComplete()) {
                        clearInterval(uploading);
                        uploadProgress.style('success');
                    }
                    chunk += 500;
                }, 10);
            });
        });
    </script>
    <script>
var result = document.querySelector('.result')
var img_result = document.querySelector('.img-result')
var img_w = document.querySelector('.img-w')
var img_h = document.querySelector('.img-h')
var options = document.querySelector('.options')
var save = document.querySelector('.save')
var cropped = document.querySelector('.cropped')
var dwn = document.querySelector('.download')
var upload = document.querySelector('#fuUpload')
var cropper = '';

// on change show image with crop options
upload.addEventListener('change', (e) => {
  console.log("change happended");
  if (e.target.files.length) {
		// start file reader
    const reader = new FileReader();
    reader.onload = (e)=> {
      if(e.target.result){
				// create new image
				let img = document.createElement('img');
				img.id = 'image';
				img.src = e.target.result
				// clean result before
				result.innerHTML = '';
				// append new image
        result.appendChild(img);
				// show save btn and options
				save.classList.remove('hide');
				options.classList.remove('hide');
				// init cropper
				cropper = new Cropper(img);
      }
    };
    reader.readAsDataURL(e.target.files[0]);
  }
});

// save on click
save.addEventListener('click',(e)=>{
  e.preventDefault();
  // get result to data uri
  let imgSrc = cropper.getCroppedCanvas({
		width: img_w.value // input value
	}).toDataURL();
  // remove hide class of img
  cropped.classList.remove('hide');
	img_result.classList.remove('hide');
	// show image cropped
  cropped.src = imgSrc;
  dwn.classList.remove('hide');
  dwn.download = 'imagename.png';
  dwn.setAttribute('href',imgSrc);
});

    </script>
<%- include('../includes/end.ejs') %>